// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid()) @db.Uuid
  name       String   @db.VarChar(50)
  email      String   @unique @db.VarChar(320)
  role       String   @db.VarChar(20)
  password   String   @db.VarChar(72)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)
  Coach      Coach?

  @@map("user")
}

model Coach {
  id                String   @id @default(uuid()) @db.Uuid
  user_id           String   @unique @db.Uuid
  experience_years  Int
  description       String   @db.Text
  profile_image_url String   @db.VarChar(2048)
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @updatedAt @db.Timestamp(6)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("coach")
}

model Skill {
  id         String   @id @default(uuid()) @db.Uuid
  name       String   @unique @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamp(6)

  @@map("skill")
}

model CreditPackage {
  id            String   @id @default(uuid()) @db.Uuid
  name          String   @unique @db.VarChar(50)
  credit_amount Int
  price         Decimal  @db.Decimal(10, 2)
  created_at    DateTime @default(now()) @db.Timestamp(6)

  @@map("credit_package")
}
